egrep -R "string" * | egrep -v "jquery|sql|ckedit|type string|param string|_string|return string|PHPMailer|html2pdf|\$string" | egrep "class|extend|new
include/reports/graphs/generic_query_graph.class.php: * Echo a png string, creating a graph that indicates how many alerts
include/reports/graphs/report_graph.class.php: * Echo a png string, creating a graph that indicates how many alerts
include/reports/graphs/report_graph.class.php:		 * @param $labels -> array of strings/numbers ...
include/reports/tags.class.php:	 * @return (constant, string, url or operation)
include/reports/tags.class.php: * @param $string string
include/reports/tags.class.php:function & get_tags($string) {
include/reports/tags.class.php:	preg_match_all(TAG_REGEXP, $string, $tags_tmp, PREG_PATTERN_ORDER);
include/reports/tags.class.php:		if(strpos($string, "{" . $tag) !== false) $tags[]= $tag;
include/reports/tags.class.php:function & get_vars($string, $calc_method="any") {
include/reports/tags.class.php:	$ret= preg_match_all(VAR_REGEXP, $string, $vars, PREG_PATTERN_ORDER);
include/reports/tags.class.php: * @param $tag_name string
include/reports/tags.class.php: * If the string is a TAG ({xxxxxx}) returns the tag name (xxxxxx), else
include/reports/tags.class.php: * @param $string string
include/reports/tags.class.php:function is_a_tag($string) {
include/reports/tags.class.php:	if(preg_match('#\{([a-z0-9\-_]*?)\}#is', $string, $tags)) {
include/reports/data_sources.class.php:		 * @return (constant, string, url or operation)
include/reports/tags/tag_query.class.php:						<td class='data_box_cell'>If you need values to be returned as CSV string, instead HTML table.</td>
include/reports/tags/tag_query.class.php:						<td class='data_box_cell'>If true and the query does not retuns any data, a string with this situation is shown.</td>
include/reports/tags/tag_http.class.php:			$field->reference= new string();
include/reports/tags/tag_search.class.php:			This tag will search into the value for a substring and return the result of search.<br>
include/reports/tags/tag_html_extract.class.php:			This tag will search into the value for a substring and return the result of search.<br>
include/reports/tags/tag_html_extract.class.php:						<td class='data_box_cell'>If this parameter is set, for each occurrence of this object type, search this string into it to pass the filter.<br>
include/reports/tags/tag_generic_graph.class.php:			<p>You can set series using the special string "&lt;GRAPH_SERIES&gt;" and the values for each serie.<br>
include/classes/mailing_form.class.php:			$fields2[0]= new field("subject","Subject","string",false, false, true, true);
include/classes/dw_user.class.php:			$fields[]= new field("username",$MESSAGES["USER_FIELD_USERNAME"],"string",true,true,true,false);
include/classes/dw_user.class.php:			$fields[]= new field("name",$MESSAGES["USER_FIELD_NAME"],"string",true,false,true,true);
include/classes/dw_user.class.php:			$fields[]= new field("surname",$MESSAGES["USER_FIELD_SURNAME"],"string",false,false,true,true);
include/classes/dw_user.class.php:			$fields[]= new field("email",$MESSAGES["USER_FIELD_EMAIL"],"string",true,false,true,true);
include/classes/dw_user.class.php:			$fields[]= new field("hiredate",$MESSAGES["USER_FIELD_HIREDATE"],"string",false,false,true,false);
include/classes/dw_users.class.php:			$fields[1]= new field("username",$MESSAGES["USER_FIELD_USERNAME"],"string",true,true,true,true);
include/classes/dw_users.class.php:			$fields[4]= new field("name",$MESSAGES["USER_FIELD_NAME"],"string",true,false,true,true);
include/classes/dw_users.class.php:			$fields[5]= new field("surname",$MESSAGES["USER_FIELD_SURNAME"],"string",false,false,true,true);
include/classes/dw_users.class.php:			$fields[8]= new field("email",$MESSAGES["USER_FIELD_EMAIL"],"string",true,false,true,true);
include/classes/dw_users.class.php:			$fields[9]= new field("hiredate",$MESSAGES["USER_FIELD_HIREDATE"],"string",false,false,true,false);
include/classes/dw_parameters.class.php:			$fields[]= new field_ext("app_parameters.parameter",$MESSAGES["PARAMETERS_FIELD_NAME"],"string",true,true,1,true);
include/classes/dw_parameters.class.php:			$fields[]= new field_ext("app_parameters.value",$MESSAGES["PARAMETERS_FIELD_VALUE"],"string",false,false,2,true);
include/classes/dw_task_manager.class.php:			$fields[]= new field_ext("tasks.task_name",$MESSAGES["TASKS_FIELD_NAME"],"string",true,false,1,true,$null_reference);
include/classes/generic_mailing_form.class.php:				$fields[]= new field("mail_from","From","string", false, false, true, true);
include/classes/generic_mailing_form.class.php:				$fields[]= new field("mail_to","To","string", false, false, true, true);
include/classes/generic_mailing_form.class.php:				$fields[]= new field("mail_subject","Subject","string",false, false, true, true);
include/classes/frm_config.class.php:			$fields2[]= new field("var_APP_VERSION","Application version","string", false, false, true, false, APP_VERSION);
include/classes/frm_config.class.php:			$fields2[]= new field("var_APP_NAME","Instance","string", false, false, true, true, APP_NAME);
include/classes/frm_config.class.php:			$fields2[]= new field("var_HOME","Instance home directory (web based)","string", false, false, true, true, HOME);
include/classes/frm_config.class.php:			$fields2[]= new field("var_SERVER_URL","Server URL","string", false, false, true, true, SERVER_URL);
include/classes/frm_config.class.php:			$fields2[]= new field("var_ADM_EMAIL","Administrator e-mail","string", false, false, true, true, ADM_EMAIL);
include/classes/frm_config.class.php:			$fields2[]= new field("var_APP_LOGO","Application logo (web based reference)","string", false, false, true, true, APP_LOGO);
include/classes/frm_config.class.php:			$fields2[]= new field("var_APP_MINILOGO","Application logo (web based reference)","string", false, false, true, true, APP_MINILOGO);
include/classes/frm_config.class.php:			$fields3[]= new field("var_DBServer","Database server hostname (or IP)","string", false, false, true, true, DBServer);
include/classes/frm_config.class.php:			$fields3[]= new field("var_DBName","Database name","string", false, false, true, true, DBName);
include/classes/frm_config.class.php:			$fields3[]= new field("var_DBUser","Database user name","string", false, false, true, true, DBUser);
include/classes/frm_config.class.php:			$fields3[]= new field("var_DBPass","Database password","string", false, false, true, true, DBPass);
include/classes/dw_report_tags.class.php://			$fields[]= new field_ext("report_tags.tag_name",$MESSAGES["TAGS_FIELD_NAME"],"string",true,true,1,true);
include/classes/dw_dashboards.class.php:			$fields[]= new master_field(HOME . "/tools/dashboard_preview.php", $fields[0], "dashboard_name",$MESSAGES["REPORT_FIELD_NAME"],"string",true,true,true,true);
include/classes/dw_groups.class.php:			$fields[1]= new field_ext("groups.name",$MESSAGES["GROUP_FIELD_NAME"],"string",true,true,1,true);
include/classes/dw_groups.class.php:			$fields[2]= new field_ext("groups.description",$MESSAGES["GROUP_FIELD_DESCRIPTION"],"string",false,false,2,true);
include/classes/dw_reports.class.php:			$fields[]= new master_field(HOME . "/tools/report_preview.php", $fields[0], "report_name",$MESSAGES["REPORT_FIELD_NAME"],"string",true,true,true,true);
include/dbms/oracle.class.php:			$strings_to_escape= array(
include/dbms/oracle.class.php:			$ret= stripslashes($string);
include/dbms/oracle.class.php:			foreach($strings_to_escape as $to_search => $to_replace) {
include/dbms/oracle.class.php:		final public function dbms_left($string, $lenght) {
include/dbms/dbms.class.php:		abstract public function dbms_is_valid_object_name($string);
include/dbms/dbms.class.php:		abstract public function dbms_get_valid_object_name($string);
include/dbms/dbms.class.php:		abstract public function dbms_left($string, $lenght);
include/jpgraph/src/jpgraph_table.php:            $this->iCells[$aRow][$aCol] = new GTextTableCell((string)$aVal,$aRow,$aCol);
include/forms/field_types/basic.inc.php:	class string extends field_type {
include/forms/field_types/basic.inc.php:	class currency extends string {
include/forms/field_types/basic.inc.php:	class email extends string {
my_include/classes/dw_marks.php:			$fields[1]= new field_ext("time_marks.user_id","","string", true, false, 0, true);
my_include/classes/dw_marks.php:			$fields[3]= new field_ext("time_marks.marks","Marks","string",false,false,3,true);
my_include/classes/dw_marks.php:			$fields[4]= new field_ext("time_marks.minutes","Minutes","string",true,false,4,true);
my_include/lookups/lookup_products.php:	$fields[1]= new field("vendor",$MESSAGES["PRODUCT_FIELD_VENDOR"],"string",true,false,true,true);
my_include/lookups/lookup_products.php:	$fields[2]= new field("name",$MESSAGES["PRODUCT_FIELD_NAME"],"string",true,false,true,true);
my_include/lookups/lookup_products.php:	$fields[3]= new field("version",$MESSAGES["PRODUCT_FIELD_VERSION"],"string",true,false,true,true);
my_include/lookups/lookup_products.php:	$fields[4]= new field("full_name",$MESSAGES["PRODUCT_FIELD_FULL"],"string",false,false,false,false);
register.php:	$fields[1]= new field("username",$MESSAGES["USER_FIELD_USERNAME"],"string",true,true,true,true);
register.php:	$fields[3]= new field("name",$MESSAGES["USER_FIELD_NAME"],"string",true,false,true,true);
register.php:	$fields[4]= new field("surname",$MESSAGES["USER_FIELD_SURNAME"],"string",false,false,true,true);
register.php:	$fields[5]= new field("email",$MESSAGES["USER_FIELD_EMAIL"],"string",true,false,true,true);
register.php:	$fields[8]= new field("id_group","","string",false,false,false,false);
test/reports/graphs/generic_query_graph.class.php: * Echo a png string, creating a graph that indicates how many alerts
test/reports/graphs/report_graph.class.php: * Echo a png string, creating a graph that indicates how many alerts
test/reports/graphs/report_graph.class.php:		 *  $labels -> array of strings/numbers ...
test/reports/tags.class.php:		 * @return (constant, string, url or operation)
test/reports/tags.class.php:	 * @param $string string
test/reports/tags.class.php:	function & get_tags($string) {
test/reports/tags.class.php:		preg_match_all('#\{([a-z0-9\-_|=;\$]*?)}#is', $string, $tags, PREG_OFFSET_CAPTURE);
test/reports/tags.class.php:	function & get_vars($string) {
test/reports/tags.class.php:		preg_match_all('#\[\$([a-z0-9\-_|=;\$]*?)\]#is', $string, $vars, PREG_OFFSET_CAPTURE);
test/reports/tags.class.php:	 * @param $tag_name string
test/reports/tags.class.php:	 * If the string is a TAG ({xxxxxx}) returns the tag name (xxxxxx), else
test/reports/tags.class.php:	 * @param $string string
test/reports/tags.class.php:	function is_a_tag($string) {
test/reports/tags.class.php:		if(preg_match('#\{([a-z0-9\-_]*?)\}#is', $string, $tags)) {
test/reports/data_sources.class.php:		 * @return (constant, string, url or operation)
test/reports/tags/tag_http.class.php:			$field->reference= new string();
test/reports/tags/tag_generic_graph.class.php:			<p>You can set series using the special string "&lt;GRAPH_SERIES&gt;" and the values for each serie.<br>
test/tag_html_extract.class.php:			This tag will search into the value for a substring and return the result of search.<br>
test/tag_html_extract.class.php:						<td class='data_box_cell'>If this parameter is set, for each occurrence of this object type, search this string into it to pass the filter.</td>
test/dw_marcatges.php:	class field_ext_ip_mac extends string {
test/dw_marcatges.php:			$fields_mark[3]= new field_ext("time_marks.marks","Marcatges","string",true,false,3,true);
test/basic.inc.php:	class string extends field_type {
test/basic.inc.php:	class currency extends string {
test/basic.inc.php:	class email extends string {
test/tags.class.php:		 * @return (constant, string, url or operation)
test/tags.class.php:	 * @param $string string
test/tags.class.php:	function & get_tags($string) {
test/tags.class.php:		preg_match_all(TAG_REGEXP, $string, $tags_tmp, PREG_PATTERN_ORDER);
test/tags.class.php:			if(strpos($string, "{" . $tag) !== false) $tags[]= $tag;
test/tags.class.php:	function & get_vars($string, $calc_method="any") {
test/tags.class.php:			$ret1= preg_match_all(VAR_REGEXP1, $string, $vars1, PREG_PATTERN_ORDER);
test/tags.class.php:				if(strpos($string, '[$' . $var) !== false) $vars[]= $var;
test/tags.class.php:		$ret2= preg_match_all(VAR_REGEXP2, $string, $vars2, PREG_PATTERN_ORDER);
test/tags.class.php:			if(strpos($string, '{$' . $var) !== false) $vars[]= $var;
test/tags.class.php:	 * @param $tag_name string
test/tags.class.php:	 * If the string is a TAG ({xxxxxx}) returns the tag name (xxxxxx), else
test/tags.class.php:	 * @param $string string
test/tags.class.php:	function is_a_tag($string) {
test/tags.class.php:		if(preg_match('#\{([a-z0-9\-_]*?)\}#is', $string, $tags)) {
test/report_graph.class.php: * Echo a png string, creating a graph that indicates how many alerts
test/report_graph.class.php:		 *  $labels -> array of strings/numbers ...
test/dw_dashboards.class.php:			$fields[]= new master_field(HOME . "/tools/dashboard_preview.php", $fields[0], "dashboard_name",$MESSAGES["REPORT_FIELD_NAME"],"string",true,true,true,true);
test/tags.class-20180618.php:		 * @return (constant, string, url or operation)
test/tags.class-20180618.php:	 * @param $string string
test/tags.class-20180618.php:	function & get_tags($string) {
test/tags.class-20180618.php:		preg_match_all(TAG_REGEXP, $string, $tags_tmp, PREG_PATTERN_ORDER);
test/tags.class-20180618.php:			if(strpos($string, "{" . $tag) !== false) $tags[]= $tag;
test/tags.class-20180618.php:	function & get_vars($string, $calc_method="any") {
test/tags.class-20180618.php:			$ret1= preg_match_all(VAR_REGEXP1, $string, $vars1, PREG_PATTERN_ORDER);
test/tags.class-20180618.php:				if(strpos($string, '[$' . $var) !== false) $vars[]= $var;
test/tags.class-20180618.php:		$ret2= preg_match_all(VAR_REGEXP2, $string, $vars2, PREG_PATTERN_ORDER);
test/tags.class-20180618.php:			if(strpos($string, '{$' . $var) !== false) $vars[]= $var;
test/tags.class-20180618.php:	 * @param $tag_name string
test/tags.class-20180618.php:	 * If the string is a TAG ({xxxxxx}) returns the tag name (xxxxxx), else
test/tags.class-20180618.php:	 * @param $string string
test/tags.class-20180618.php:	function is_a_tag($string) {
test/tags.class-20180618.php:		if(preg_match('#\{([a-z0-9\-_]*?)\}#is', $string, $tags)) {
test/dw_reports.class.php:			$fields[]= new master_field(HOME . "/tools/report_preview.php", $fields[0], "report_name",$MESSAGES["REPORT_FIELD_NAME"],"string",true,true,true,true);
tools/mailing.php:	$fields2[0]= new field("subject","Subject","string",false, false, true, true);
tools/logs.php:	$fields[]= new field("log_date",$MESSAGES["LOGS_FIELD_DATE"],"string", false, false, true, false);
tools/logs.php:	$fields[]= new field("id_user",$MESSAGES["LOGS_FIELD_USER_ID"],"string", false, false, true, false);
tools/logs.php:	$fields[]= new field("username",$MESSAGES["LOGS_FIELD_USERNAME"],"string", false, false, true, false);
tools/logs.php:	$fields[]= new field("host",$MESSAGES["LOGS_FIELD_HOST"],"string", false, false, true, false);
tools/logs.php:	$fields[]= new field("module",$MESSAGES["LOGS_FIELD_MOD"],"string", false, false, true, false);
tools/logs.php:	$fields[]= new field("action",$MESSAGES["LOGS_FIELD_REG"],"string", false, false, true, false);
tools/bugs.php:	$fields[]= new field("username",$MESSAGES["USER_FIELD_USERNAME"],"string",false,false,true,false,$USER_NAME);
